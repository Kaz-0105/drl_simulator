simulator :
  network_name: 'two_lane' # シミュレーションに使うネットワーク名（ディレクトリ名）
  control_method: 'mpc'     # 制御手法の指定
  simulation_time: 200      # シミュレーションを行う時間（秒）
  seed:
    is_random: false        # シード値をランダムにするかどうか
    value: 95               # シード値を固定する場合の値（is_randomがfalseのときのみ有効）
  time_step: 2              # シミュレーションの更新の時間幅（秒）
  red_steps: 1              # 全赤の時間（time_stepの長さに合わせ調整すること）
  min_successive_steps: 5   # 最小の青時間連続時間（ステップ数）
  max_workers: 20           # 並列実行するワーカー数
  debug_flg: true           # デバッグモードのフラグ
  
drl:
  method: 'apex'
  learning_flg: true
  features:
    vehicle:
      position: false
      speed: false
      in_queue: false
      direction: false
      wait_flg: true
      near_flg: false
    lane:
      metric: 
        num_vehicles: true
      shape:
        length: true
        type: true
    road:
      metric:
        queue_length: true
        delay: true
  num_vehicles: 10

apex:
  network_id: 1          # ニューラルネットワークのID
  duration_steps: 5      # 1回の予測で決める時間ステップ幅
  td_steps: 3            # TD法の参照するステップ数
  update_interval: 50    # ターゲットネットワークの同期間隔
  buffer:
    size: 1000           # リプレイバッファのサイズ
    batch_size: 128      # バッチサイズ
    alpha: 0.3           # 優先度をexponentialで計算する際のパラメータ
  gamma: 0.5             # 割引率
  learning_rate: 0.002   # 学習率
  epsilon: 0.3           # 探索率（ε-greedy法）

mpc:
  horizon: 5              # 予測ホライズンの長さ（ステップ数）
  used_steps: 2           # 採用するホライゾンの長さ（ステップ数）(horizonの半分以下)
  calc_start_steps: 2     # 計算を開始するときの決まってる将来のステップ数（used_steps以下）
  min_successive_steps: 5 # 最小の青時間連続時間（ステップ数）
  num_max_changes: 1      # 1回の予測での最大変化数
  phases:
    - num_roads: 3
      type: '4-phase'          # 4-phaseのみ
    - num_roads: 4
      type: '17-phase'         # 4-phase, 8-phase, 17-phaseから選択
    - num_roads: 5
      type: '10-phase'         # 10-phaseのみ

records:
  metric:
    queue_length: true
    delay: true
    phase: false
  max_len: 20            # 記録しない場合の一次的に記録するデータの数

